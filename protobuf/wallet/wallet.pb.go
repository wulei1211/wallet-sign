// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: protobuf/wallet.proto

package wallet

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ReturnCode int32

const (
	ReturnCode_ERROR   ReturnCode = 0
	ReturnCode_SUCCESS ReturnCode = 1
)

// Enum value maps for ReturnCode.
var (
	ReturnCode_name = map[int32]string{
		0: "ERROR",
		1: "SUCCESS",
	}
	ReturnCode_value = map[string]int32{
		"ERROR":   0,
		"SUCCESS": 1,
	}
)

func (x ReturnCode) Enum() *ReturnCode {
	p := new(ReturnCode)
	*p = x
	return p
}

func (x ReturnCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ReturnCode) Descriptor() protoreflect.EnumDescriptor {
	return file_protobuf_wallet_proto_enumTypes[0].Descriptor()
}

func (ReturnCode) Type() protoreflect.EnumType {
	return &file_protobuf_wallet_proto_enumTypes[0]
}

func (x ReturnCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ReturnCode.Descriptor instead.
func (ReturnCode) EnumDescriptor() ([]byte, []int) {
	return file_protobuf_wallet_proto_rawDescGZIP(), []int{0}
}

type SignWay struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SignWay) Reset() {
	*x = SignWay{}
	mi := &file_protobuf_wallet_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SignWay) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignWay) ProtoMessage() {}

func (x *SignWay) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_wallet_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignWay.ProtoReflect.Descriptor instead.
func (*SignWay) Descriptor() ([]byte, []int) {
	return file_protobuf_wallet_proto_rawDescGZIP(), []int{0}
}

func (x *SignWay) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type SupportSignRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ConsumerToken string                 `protobuf:"bytes,1,opt,name=consumer_token,json=consumerToken,proto3" json:"consumer_token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SupportSignRequest) Reset() {
	*x = SupportSignRequest{}
	mi := &file_protobuf_wallet_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SupportSignRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SupportSignRequest) ProtoMessage() {}

func (x *SupportSignRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_wallet_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SupportSignRequest.ProtoReflect.Descriptor instead.
func (*SupportSignRequest) Descriptor() ([]byte, []int) {
	return file_protobuf_wallet_proto_rawDescGZIP(), []int{1}
}

func (x *SupportSignRequest) GetConsumerToken() string {
	if x != nil {
		return x.ConsumerToken
	}
	return ""
}

type SupportSignResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Code          ReturnCode             `protobuf:"varint,1,opt,name=code,proto3,enum=theweb3.wallet.ReturnCode" json:"code,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	SignWayList   []*SignWay             `protobuf:"bytes,3,rep,name=sign_way_list,json=signWayList,proto3" json:"sign_way_list,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SupportSignResponse) Reset() {
	*x = SupportSignResponse{}
	mi := &file_protobuf_wallet_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SupportSignResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SupportSignResponse) ProtoMessage() {}

func (x *SupportSignResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_wallet_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SupportSignResponse.ProtoReflect.Descriptor instead.
func (*SupportSignResponse) Descriptor() ([]byte, []int) {
	return file_protobuf_wallet_proto_rawDescGZIP(), []int{2}
}

func (x *SupportSignResponse) GetCode() ReturnCode {
	if x != nil {
		return x.Code
	}
	return ReturnCode_ERROR
}

func (x *SupportSignResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *SupportSignResponse) GetSignWayList() []*SignWay {
	if x != nil {
		return x.SignWayList
	}
	return nil
}

type ExportPublicKey struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	PublicKey         string                 `protobuf:"bytes,1,opt,name=public_key,json=publicKey,proto3" json:"public_key,omitempty"`
	CompressPublicKey string                 `protobuf:"bytes,2,opt,name=compress_public_key,json=compressPublicKey,proto3" json:"compress_public_key,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *ExportPublicKey) Reset() {
	*x = ExportPublicKey{}
	mi := &file_protobuf_wallet_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExportPublicKey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExportPublicKey) ProtoMessage() {}

func (x *ExportPublicKey) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_wallet_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExportPublicKey.ProtoReflect.Descriptor instead.
func (*ExportPublicKey) Descriptor() ([]byte, []int) {
	return file_protobuf_wallet_proto_rawDescGZIP(), []int{3}
}

func (x *ExportPublicKey) GetPublicKey() string {
	if x != nil {
		return x.PublicKey
	}
	return ""
}

func (x *ExportPublicKey) GetCompressPublicKey() string {
	if x != nil {
		return x.CompressPublicKey
	}
	return ""
}

type CreateKeyPairAndExportPublicKeyRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ConsumerToken string                 `protobuf:"bytes,1,opt,name=consumer_token,json=consumerToken,proto3" json:"consumer_token,omitempty"`
	SignType      string                 `protobuf:"bytes,2,opt,name=sign_type,json=signType,proto3" json:"sign_type,omitempty"`
	KeyNum        uint64                 `protobuf:"varint,3,opt,name=key_num,json=keyNum,proto3" json:"key_num,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateKeyPairAndExportPublicKeyRequest) Reset() {
	*x = CreateKeyPairAndExportPublicKeyRequest{}
	mi := &file_protobuf_wallet_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateKeyPairAndExportPublicKeyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateKeyPairAndExportPublicKeyRequest) ProtoMessage() {}

func (x *CreateKeyPairAndExportPublicKeyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_wallet_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateKeyPairAndExportPublicKeyRequest.ProtoReflect.Descriptor instead.
func (*CreateKeyPairAndExportPublicKeyRequest) Descriptor() ([]byte, []int) {
	return file_protobuf_wallet_proto_rawDescGZIP(), []int{4}
}

func (x *CreateKeyPairAndExportPublicKeyRequest) GetConsumerToken() string {
	if x != nil {
		return x.ConsumerToken
	}
	return ""
}

func (x *CreateKeyPairAndExportPublicKeyRequest) GetSignType() string {
	if x != nil {
		return x.SignType
	}
	return ""
}

func (x *CreateKeyPairAndExportPublicKeyRequest) GetKeyNum() uint64 {
	if x != nil {
		return x.KeyNum
	}
	return 0
}

type CreateKeyPairAndExportPublicKeyResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Code          ReturnCode             `protobuf:"varint,1,opt,name=code,proto3,enum=theweb3.wallet.ReturnCode" json:"code,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	PublicKeyList []*ExportPublicKey     `protobuf:"bytes,3,rep,name=public_key_list,json=publicKeyList,proto3" json:"public_key_list,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateKeyPairAndExportPublicKeyResponse) Reset() {
	*x = CreateKeyPairAndExportPublicKeyResponse{}
	mi := &file_protobuf_wallet_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateKeyPairAndExportPublicKeyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateKeyPairAndExportPublicKeyResponse) ProtoMessage() {}

func (x *CreateKeyPairAndExportPublicKeyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_wallet_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateKeyPairAndExportPublicKeyResponse.ProtoReflect.Descriptor instead.
func (*CreateKeyPairAndExportPublicKeyResponse) Descriptor() ([]byte, []int) {
	return file_protobuf_wallet_proto_rawDescGZIP(), []int{5}
}

func (x *CreateKeyPairAndExportPublicKeyResponse) GetCode() ReturnCode {
	if x != nil {
		return x.Code
	}
	return ReturnCode_ERROR
}

func (x *CreateKeyPairAndExportPublicKeyResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *CreateKeyPairAndExportPublicKeyResponse) GetPublicKeyList() []*ExportPublicKey {
	if x != nil {
		return x.PublicKeyList
	}
	return nil
}

type SignMessageSignatureRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ConsumerToken string                 `protobuf:"bytes,1,opt,name=consumer_token,json=consumerToken,proto3" json:"consumer_token,omitempty"`
	SignType      string                 `protobuf:"bytes,2,opt,name=sign_type,json=signType,proto3" json:"sign_type,omitempty"`
	PublicKey     string                 `protobuf:"bytes,3,opt,name=public_key,json=publicKey,proto3" json:"public_key,omitempty"`
	TxMessageHash string                 `protobuf:"bytes,4,opt,name=tx_message_hash,json=txMessageHash,proto3" json:"tx_message_hash,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SignMessageSignatureRequest) Reset() {
	*x = SignMessageSignatureRequest{}
	mi := &file_protobuf_wallet_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SignMessageSignatureRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignMessageSignatureRequest) ProtoMessage() {}

func (x *SignMessageSignatureRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_wallet_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignMessageSignatureRequest.ProtoReflect.Descriptor instead.
func (*SignMessageSignatureRequest) Descriptor() ([]byte, []int) {
	return file_protobuf_wallet_proto_rawDescGZIP(), []int{6}
}

func (x *SignMessageSignatureRequest) GetConsumerToken() string {
	if x != nil {
		return x.ConsumerToken
	}
	return ""
}

func (x *SignMessageSignatureRequest) GetSignType() string {
	if x != nil {
		return x.SignType
	}
	return ""
}

func (x *SignMessageSignatureRequest) GetPublicKey() string {
	if x != nil {
		return x.PublicKey
	}
	return ""
}

func (x *SignMessageSignatureRequest) GetTxMessageHash() string {
	if x != nil {
		return x.TxMessageHash
	}
	return ""
}

type SignMessageSignatureResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Code          ReturnCode             `protobuf:"varint,1,opt,name=code,proto3,enum=theweb3.wallet.ReturnCode" json:"code,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Signature     string                 `protobuf:"bytes,3,opt,name=signature,proto3" json:"signature,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SignMessageSignatureResponse) Reset() {
	*x = SignMessageSignatureResponse{}
	mi := &file_protobuf_wallet_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SignMessageSignatureResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignMessageSignatureResponse) ProtoMessage() {}

func (x *SignMessageSignatureResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_wallet_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignMessageSignatureResponse.ProtoReflect.Descriptor instead.
func (*SignMessageSignatureResponse) Descriptor() ([]byte, []int) {
	return file_protobuf_wallet_proto_rawDescGZIP(), []int{7}
}

func (x *SignMessageSignatureResponse) GetCode() ReturnCode {
	if x != nil {
		return x.Code
	}
	return ReturnCode_ERROR
}

func (x *SignMessageSignatureResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *SignMessageSignatureResponse) GetSignature() string {
	if x != nil {
		return x.Signature
	}
	return ""
}

type MessageHash struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PublicKey     string                 `protobuf:"bytes,1,opt,name=public_key,json=publicKey,proto3" json:"public_key,omitempty"`
	TxMessageHash string                 `protobuf:"bytes,2,opt,name=tx_message_hash,json=txMessageHash,proto3" json:"tx_message_hash,omitempty"`
	SignType      string                 `protobuf:"bytes,3,opt,name=sign_type,json=signType,proto3" json:"sign_type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MessageHash) Reset() {
	*x = MessageHash{}
	mi := &file_protobuf_wallet_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MessageHash) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageHash) ProtoMessage() {}

func (x *MessageHash) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_wallet_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageHash.ProtoReflect.Descriptor instead.
func (*MessageHash) Descriptor() ([]byte, []int) {
	return file_protobuf_wallet_proto_rawDescGZIP(), []int{8}
}

func (x *MessageHash) GetPublicKey() string {
	if x != nil {
		return x.PublicKey
	}
	return ""
}

func (x *MessageHash) GetTxMessageHash() string {
	if x != nil {
		return x.TxMessageHash
	}
	return ""
}

func (x *MessageHash) GetSignType() string {
	if x != nil {
		return x.SignType
	}
	return ""
}

type MessageSignature struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TxMessageHash string                 `protobuf:"bytes,1,opt,name=tx_message_hash,json=txMessageHash,proto3" json:"tx_message_hash,omitempty"`
	Signature     string                 `protobuf:"bytes,2,opt,name=signature,proto3" json:"signature,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MessageSignature) Reset() {
	*x = MessageSignature{}
	mi := &file_protobuf_wallet_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MessageSignature) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageSignature) ProtoMessage() {}

func (x *MessageSignature) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_wallet_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageSignature.ProtoReflect.Descriptor instead.
func (*MessageSignature) Descriptor() ([]byte, []int) {
	return file_protobuf_wallet_proto_rawDescGZIP(), []int{9}
}

func (x *MessageSignature) GetTxMessageHash() string {
	if x != nil {
		return x.TxMessageHash
	}
	return ""
}

func (x *MessageSignature) GetSignature() string {
	if x != nil {
		return x.Signature
	}
	return ""
}

type SignBatchMessageSignatureRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ConsumerToken string                 `protobuf:"bytes,1,opt,name=consumer_token,json=consumerToken,proto3" json:"consumer_token,omitempty"`
	MessageHashes []*MessageHash         `protobuf:"bytes,3,rep,name=message_hashes,json=messageHashes,proto3" json:"message_hashes,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SignBatchMessageSignatureRequest) Reset() {
	*x = SignBatchMessageSignatureRequest{}
	mi := &file_protobuf_wallet_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SignBatchMessageSignatureRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignBatchMessageSignatureRequest) ProtoMessage() {}

func (x *SignBatchMessageSignatureRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_wallet_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignBatchMessageSignatureRequest.ProtoReflect.Descriptor instead.
func (*SignBatchMessageSignatureRequest) Descriptor() ([]byte, []int) {
	return file_protobuf_wallet_proto_rawDescGZIP(), []int{10}
}

func (x *SignBatchMessageSignatureRequest) GetConsumerToken() string {
	if x != nil {
		return x.ConsumerToken
	}
	return ""
}

func (x *SignBatchMessageSignatureRequest) GetMessageHashes() []*MessageHash {
	if x != nil {
		return x.MessageHashes
	}
	return nil
}

type SignBatchMessageSignatureResponse struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	Code              ReturnCode             `protobuf:"varint,1,opt,name=code,proto3,enum=theweb3.wallet.ReturnCode" json:"code,omitempty"`
	Message           string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	MessageSignatures []*MessageSignature    `protobuf:"bytes,3,rep,name=message_signatures,json=messageSignatures,proto3" json:"message_signatures,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *SignBatchMessageSignatureResponse) Reset() {
	*x = SignBatchMessageSignatureResponse{}
	mi := &file_protobuf_wallet_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SignBatchMessageSignatureResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignBatchMessageSignatureResponse) ProtoMessage() {}

func (x *SignBatchMessageSignatureResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_wallet_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignBatchMessageSignatureResponse.ProtoReflect.Descriptor instead.
func (*SignBatchMessageSignatureResponse) Descriptor() ([]byte, []int) {
	return file_protobuf_wallet_proto_rawDescGZIP(), []int{11}
}

func (x *SignBatchMessageSignatureResponse) GetCode() ReturnCode {
	if x != nil {
		return x.Code
	}
	return ReturnCode_ERROR
}

func (x *SignBatchMessageSignatureResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *SignBatchMessageSignatureResponse) GetMessageSignatures() []*MessageSignature {
	if x != nil {
		return x.MessageSignatures
	}
	return nil
}

var File_protobuf_wallet_proto protoreflect.FileDescriptor

const file_protobuf_wallet_proto_rawDesc = "" +
	"\n" +
	"\x15protobuf/wallet.proto\x12\x0etheweb3.wallet\"\x1d\n" +
	"\aSignWay\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\";\n" +
	"\x12SupportSignRequest\x12%\n" +
	"\x0econsumer_token\x18\x01 \x01(\tR\rconsumerToken\"\x9c\x01\n" +
	"\x13SupportSignResponse\x12.\n" +
	"\x04code\x18\x01 \x01(\x0e2\x1a.theweb3.wallet.ReturnCodeR\x04code\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x12;\n" +
	"\rsign_way_list\x18\x03 \x03(\v2\x17.theweb3.wallet.SignWayR\vsignWayList\"`\n" +
	"\x0fExportPublicKey\x12\x1d\n" +
	"\n" +
	"public_key\x18\x01 \x01(\tR\tpublicKey\x12.\n" +
	"\x13compress_public_key\x18\x02 \x01(\tR\x11compressPublicKey\"\x85\x01\n" +
	"&CreateKeyPairAndExportPublicKeyRequest\x12%\n" +
	"\x0econsumer_token\x18\x01 \x01(\tR\rconsumerToken\x12\x1b\n" +
	"\tsign_type\x18\x02 \x01(\tR\bsignType\x12\x17\n" +
	"\akey_num\x18\x03 \x01(\x04R\x06keyNum\"\xbc\x01\n" +
	"'CreateKeyPairAndExportPublicKeyResponse\x12.\n" +
	"\x04code\x18\x01 \x01(\x0e2\x1a.theweb3.wallet.ReturnCodeR\x04code\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x12G\n" +
	"\x0fpublic_key_list\x18\x03 \x03(\v2\x1f.theweb3.wallet.ExportPublicKeyR\rpublicKeyList\"\xa8\x01\n" +
	"\x1bSignMessageSignatureRequest\x12%\n" +
	"\x0econsumer_token\x18\x01 \x01(\tR\rconsumerToken\x12\x1b\n" +
	"\tsign_type\x18\x02 \x01(\tR\bsignType\x12\x1d\n" +
	"\n" +
	"public_key\x18\x03 \x01(\tR\tpublicKey\x12&\n" +
	"\x0ftx_message_hash\x18\x04 \x01(\tR\rtxMessageHash\"\x86\x01\n" +
	"\x1cSignMessageSignatureResponse\x12.\n" +
	"\x04code\x18\x01 \x01(\x0e2\x1a.theweb3.wallet.ReturnCodeR\x04code\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x12\x1c\n" +
	"\tsignature\x18\x03 \x01(\tR\tsignature\"q\n" +
	"\vMessageHash\x12\x1d\n" +
	"\n" +
	"public_key\x18\x01 \x01(\tR\tpublicKey\x12&\n" +
	"\x0ftx_message_hash\x18\x02 \x01(\tR\rtxMessageHash\x12\x1b\n" +
	"\tsign_type\x18\x03 \x01(\tR\bsignType\"X\n" +
	"\x10MessageSignature\x12&\n" +
	"\x0ftx_message_hash\x18\x01 \x01(\tR\rtxMessageHash\x12\x1c\n" +
	"\tsignature\x18\x02 \x01(\tR\tsignature\"\x8d\x01\n" +
	" SignBatchMessageSignatureRequest\x12%\n" +
	"\x0econsumer_token\x18\x01 \x01(\tR\rconsumerToken\x12B\n" +
	"\x0emessage_hashes\x18\x03 \x03(\v2\x1b.theweb3.wallet.MessageHashR\rmessageHashes\"\xbe\x01\n" +
	"!SignBatchMessageSignatureResponse\x12.\n" +
	"\x04code\x18\x01 \x01(\x0e2\x1a.theweb3.wallet.ReturnCodeR\x04code\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x12O\n" +
	"\x12message_signatures\x18\x03 \x03(\v2 .theweb3.wallet.MessageSignatureR\x11messageSignatures*$\n" +
	"\n" +
	"ReturnCode\x12\t\n" +
	"\x05ERROR\x10\x00\x12\v\n" +
	"\aSUCCESS\x10\x012\xff\x03\n" +
	"\rWalletService\x12_\n" +
	"\x12getSupportSignType\x12\".theweb3.wallet.SupportSignRequest\x1a#.theweb3.wallet.SupportSignResponse\"\x00\x12\x96\x01\n" +
	"!createKeyPairsExportPublicKeyList\x126.theweb3.wallet.CreateKeyPairAndExportPublicKeyRequest\x1a7.theweb3.wallet.CreateKeyPairAndExportPublicKeyResponse\"\x00\x12q\n" +
	"\x14signMessageSignature\x12+.theweb3.wallet.SignMessageSignatureRequest\x1a,.theweb3.wallet.SignMessageSignatureResponse\x12\x80\x01\n" +
	"\x19signBatchMessageSignature\x120.theweb3.wallet.SignBatchMessageSignatureRequest\x1a1.theweb3.wallet.SignBatchMessageSignatureResponseB\x13Z\x11./protobuf/walletb\x06proto3"

var (
	file_protobuf_wallet_proto_rawDescOnce sync.Once
	file_protobuf_wallet_proto_rawDescData []byte
)

func file_protobuf_wallet_proto_rawDescGZIP() []byte {
	file_protobuf_wallet_proto_rawDescOnce.Do(func() {
		file_protobuf_wallet_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_protobuf_wallet_proto_rawDesc), len(file_protobuf_wallet_proto_rawDesc)))
	})
	return file_protobuf_wallet_proto_rawDescData
}

var file_protobuf_wallet_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_protobuf_wallet_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_protobuf_wallet_proto_goTypes = []any{
	(ReturnCode)(0),                                 // 0: theweb3.wallet.ReturnCode
	(*SignWay)(nil),                                 // 1: theweb3.wallet.SignWay
	(*SupportSignRequest)(nil),                      // 2: theweb3.wallet.SupportSignRequest
	(*SupportSignResponse)(nil),                     // 3: theweb3.wallet.SupportSignResponse
	(*ExportPublicKey)(nil),                         // 4: theweb3.wallet.ExportPublicKey
	(*CreateKeyPairAndExportPublicKeyRequest)(nil),  // 5: theweb3.wallet.CreateKeyPairAndExportPublicKeyRequest
	(*CreateKeyPairAndExportPublicKeyResponse)(nil), // 6: theweb3.wallet.CreateKeyPairAndExportPublicKeyResponse
	(*SignMessageSignatureRequest)(nil),             // 7: theweb3.wallet.SignMessageSignatureRequest
	(*SignMessageSignatureResponse)(nil),            // 8: theweb3.wallet.SignMessageSignatureResponse
	(*MessageHash)(nil),                             // 9: theweb3.wallet.MessageHash
	(*MessageSignature)(nil),                        // 10: theweb3.wallet.MessageSignature
	(*SignBatchMessageSignatureRequest)(nil),        // 11: theweb3.wallet.SignBatchMessageSignatureRequest
	(*SignBatchMessageSignatureResponse)(nil),       // 12: theweb3.wallet.SignBatchMessageSignatureResponse
}
var file_protobuf_wallet_proto_depIdxs = []int32{
	0,  // 0: theweb3.wallet.SupportSignResponse.code:type_name -> theweb3.wallet.ReturnCode
	1,  // 1: theweb3.wallet.SupportSignResponse.sign_way_list:type_name -> theweb3.wallet.SignWay
	0,  // 2: theweb3.wallet.CreateKeyPairAndExportPublicKeyResponse.code:type_name -> theweb3.wallet.ReturnCode
	4,  // 3: theweb3.wallet.CreateKeyPairAndExportPublicKeyResponse.public_key_list:type_name -> theweb3.wallet.ExportPublicKey
	0,  // 4: theweb3.wallet.SignMessageSignatureResponse.code:type_name -> theweb3.wallet.ReturnCode
	9,  // 5: theweb3.wallet.SignBatchMessageSignatureRequest.message_hashes:type_name -> theweb3.wallet.MessageHash
	0,  // 6: theweb3.wallet.SignBatchMessageSignatureResponse.code:type_name -> theweb3.wallet.ReturnCode
	10, // 7: theweb3.wallet.SignBatchMessageSignatureResponse.message_signatures:type_name -> theweb3.wallet.MessageSignature
	2,  // 8: theweb3.wallet.WalletService.getSupportSignType:input_type -> theweb3.wallet.SupportSignRequest
	5,  // 9: theweb3.wallet.WalletService.createKeyPairsExportPublicKeyList:input_type -> theweb3.wallet.CreateKeyPairAndExportPublicKeyRequest
	7,  // 10: theweb3.wallet.WalletService.signMessageSignature:input_type -> theweb3.wallet.SignMessageSignatureRequest
	11, // 11: theweb3.wallet.WalletService.signBatchMessageSignature:input_type -> theweb3.wallet.SignBatchMessageSignatureRequest
	3,  // 12: theweb3.wallet.WalletService.getSupportSignType:output_type -> theweb3.wallet.SupportSignResponse
	6,  // 13: theweb3.wallet.WalletService.createKeyPairsExportPublicKeyList:output_type -> theweb3.wallet.CreateKeyPairAndExportPublicKeyResponse
	8,  // 14: theweb3.wallet.WalletService.signMessageSignature:output_type -> theweb3.wallet.SignMessageSignatureResponse
	12, // 15: theweb3.wallet.WalletService.signBatchMessageSignature:output_type -> theweb3.wallet.SignBatchMessageSignatureResponse
	12, // [12:16] is the sub-list for method output_type
	8,  // [8:12] is the sub-list for method input_type
	8,  // [8:8] is the sub-list for extension type_name
	8,  // [8:8] is the sub-list for extension extendee
	0,  // [0:8] is the sub-list for field type_name
}

func init() { file_protobuf_wallet_proto_init() }
func file_protobuf_wallet_proto_init() {
	if File_protobuf_wallet_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_protobuf_wallet_proto_rawDesc), len(file_protobuf_wallet_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_protobuf_wallet_proto_goTypes,
		DependencyIndexes: file_protobuf_wallet_proto_depIdxs,
		EnumInfos:         file_protobuf_wallet_proto_enumTypes,
		MessageInfos:      file_protobuf_wallet_proto_msgTypes,
	}.Build()
	File_protobuf_wallet_proto = out.File
	file_protobuf_wallet_proto_goTypes = nil
	file_protobuf_wallet_proto_depIdxs = nil
}
